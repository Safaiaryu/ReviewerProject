@model IEnumerable<ReviewerProject.Models.Monster>

@{
    ViewBag.Title = "ListMonsters";
}
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Monsters</title>

    <!-- core CSS -->
    <link href="~/Content/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/font-awesome.min.css" rel="stylesheet">
    <link href="~/Content/animate.min.css" rel="stylesheet">
    <link href="~/Content/prettyPhoto.css" rel="stylesheet">
    <link href="~/Content/main.css" rel="stylesheet">
    <link href="~/Content/responsive.css" rel="stylesheet">
</head><!--/head-->
<br />
<br />
<br />
<h2>Monsters</h2>

<br />
<div class="container">
    <img src="~/Content/Images/chocobo.jpg" alt="Eidolon" class="floatLeft bodyImg" />
    <p>
        Final Fantasy Explorers allows you to grab some monsters and get them to help on the battlefield 
        - an idea Square Enix has been working for a while and was also part of the concept in Final Fantasy 
        XIII-2. However, not all the monsters in the game can be brought on board to become part of the main 
        characters’ crew, so here you have an useful list of the ones you can carry on as allies.
    </p>
    <p>
        The first Atmalith you will find is likely the Goblin, it's just outside the gate. Then we have 
        the Goblin Lord, in the Riks trail segment on the map. The Goblin King you will find later in the
         story also has a speciale ability called Goblin Punch.
    </p>
</div>

<br />
<br />
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.MonsterName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreateCost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Load)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CanCapture)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.MonsterName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreateCost)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Load)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CanCapture)
        </td>
    </tr>
}

</table>
